"""
Keyboard layouts for Telegram bot.
"""
from aiogram.types import (
    ReplyKeyboardMarkup, 
    KeyboardButton, 
    InlineKeyboardMarkup, 
    InlineKeyboardButton
)
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder


def create_main_keyboard() -> ReplyKeyboardMarkup:
    """Create main keyboard."""
    builder = ReplyKeyboardBuilder()
    builder.add(KeyboardButton(text="üèãÔ∏è‚Äç‚ôÇÔ∏è –ù–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ"))
    builder.add(KeyboardButton(text="üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"))
    builder.add(KeyboardButton(text="‚ùì –ü–æ–º–æ—â—å"))
    builder.add(KeyboardButton(text="üéØ –ù–∞—Å—Ç—Ä–æ–π–∫–∏"))
    builder.adjust(2)
    return builder.as_markup(resize_keyboard=True)


def create_task_keyboard(pushups_count: int) -> InlineKeyboardMarkup:
    """Create keyboard for task completion."""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(
        text=f"‚úÖ –í—ã–ø–æ–ª–Ω–∏–ª ({pushups_count})", 
        callback_data=f"done_{pushups_count}"
    ))
    builder.add(InlineKeyboardButton(
        text="‚úèÔ∏è –î—Ä—É–≥–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ", 
        callback_data="custom_count"
    ))
    builder.add(InlineKeyboardButton(
        text="‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", 
        callback_data="skip"
    ))
    builder.adjust(2, 1)
    return builder.as_markup()


def create_stats_keyboard() -> InlineKeyboardMarkup:
    """Create keyboard for statistics."""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(
        text="üìà –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", 
        callback_data="detailed_stats"
    ))
    builder.add(InlineKeyboardButton(
        text="üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è", 
        callback_data="achievements"
    ))
    builder.add(InlineKeyboardButton(
        text="üìÖ –ò—Å—Ç–æ—Ä–∏—è", 
        callback_data="history"
    ))
    builder.add(InlineKeyboardButton(
        text="üîô –ù–∞–∑–∞–¥", 
        callback_data="back_to_main"
    ))
    builder.adjust(2)
    return builder.as_markup()


def create_settings_keyboard(current_level: int) -> InlineKeyboardMarkup:
    """Create keyboard for settings."""
    builder = InlineKeyboardBuilder()
    for i in range(1, 7):
        emoji = "‚úÖ" if i == current_level else f"{i}Ô∏è‚É£"
        builder.add(InlineKeyboardButton(
            text=f"{emoji} –£—Ä–æ–≤–µ–Ω—å {i}", 
            callback_data=f"set_level_{i}"
        ))
    builder.adjust(3, 3)
    return builder.as_markup() 