import logging
import random
from datetime import datetime, date, timedelta


# –ù–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —É—Ä–æ–≤–Ω–µ–π

async def send_morning_reminder(bot, chat_id, first_name):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ."""
    try:
        from src.infrastructure.database import DatabaseAdapter
        
        db = DatabaseAdapter()
        user = db.get_user(chat_id)
        
        if not user:
            return
        
        level = user.level
        daily_goal = db.get_daily_goal(level)
        today_count = db.get_today_activity_count(chat_id)
        remaining = daily_goal - today_count
        
        if remaining <= 0:
            message = f"üåÖ –î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, {first_name}!\n\nüéâ –¢—ã —É–∂–µ –≤—ã–ø–æ–ª–Ω–∏–ª –¥–Ω–µ–≤–Ω—É—é –Ω–æ—Ä–º—É ({daily_goal} –æ—Ç–∂–∏–º–∞–Ω–∏–π)! –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!"
        else:
            message = f"üåÖ –î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, {first_name}!\n\nüí™ –¢–≤–æ—è —Ü–µ–ª—å –Ω–∞ —Å–µ–≥–æ–¥–Ω—è: {daily_goal} –æ—Ç–∂–∏–º–∞–Ω–∏–π\nüìä –£–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: {today_count}\nüéØ –û—Å—Ç–∞–ª–æ—Å—å: {remaining}\n\n–ù–∞—á–Ω–∏ –¥–µ–Ω—å —Å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏!"
        
        await bot.send_message(chat_id, message)
        logging.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Ç—Ä–µ–Ω–Ω–µ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}")
        
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}: {e}")


async def send_afternoon_reminder(bot, chat_id, first_name):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –¥–Ω–µ–≤–Ω–æ–≥–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ."""
    try:
        from src.infrastructure.database import DatabaseAdapter
        
        db = DatabaseAdapter()
        user = db.get_user(chat_id)
        
        if not user:
            return
        
        level = user.level
        daily_goal = db.get_daily_goal(level)
        today_count = db.get_today_activity_count(chat_id)
        remaining = daily_goal - today_count
        
        if remaining <= 0:
            message = f"‚òÄÔ∏è –ü—Ä–∏–≤–µ—Ç, {first_name}!\n\nüéâ –¢—ã —É–∂–µ –≤—ã–ø–æ–ª–Ω–∏–ª –¥–Ω–µ–≤–Ω—É—é –Ω–æ—Ä–º—É! –ú–æ–∂–µ—à—å –æ—Ç–¥–æ—Ö–Ω—É—Ç—å –∏–ª–∏ —Å–¥–µ–ª–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ—Ç–∂–∏–º–∞–Ω–∏—è –¥–ª—è —É–∫—Ä–µ–ø–ª–µ–Ω–∏—è!"
        else:
            message = f"‚òÄÔ∏è –ü—Ä–∏–≤–µ—Ç, {first_name}!\n\nüí™ –ù–µ –∑–∞–±—É–¥—å –ø—Ä–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É!\nüìä –ü—Ä–æ–≥—Ä–µ—Å—Å: {today_count}/{daily_goal}\nüéØ –û—Å—Ç–∞–ª–æ—Å—å: {remaining}\n\n–°–¥–µ–ª–∞–π –ø–µ—Ä–µ—Ä—ã–≤ –∏ –≤—ã–ø–æ–ª–Ω–∏ —á–∞—Å—Ç—å –æ—Ç–∂–∏–º–∞–Ω–∏–π!"
        
        await bot.send_message(chat_id, message)
        logging.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –¥–Ω–µ–≤–Ω–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}")
        
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–Ω–µ–≤–Ω–æ–≥–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}: {e}")


async def send_evening_reminder(bot, chat_id, first_name):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –≤–µ—á–µ—Ä–Ω–µ–≥–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ."""
    try:
        from src.infrastructure.database import DatabaseAdapter
        
        db = DatabaseAdapter()
        user = db.get_user(chat_id)
        
        if not user:
            return
        
        level = user.level
        daily_goal = db.get_daily_goal(level)
        today_count = db.get_today_activity_count(chat_id)
        remaining = daily_goal - today_count
        
        if remaining <= 0:
            message = f"üåô –î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä, {first_name}!\n\nüéâ –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! –¢—ã –≤—ã–ø–æ–ª–Ω–∏–ª –¥–Ω–µ–≤–Ω—É—é –Ω–æ—Ä–º—É {daily_goal} –æ—Ç–∂–∏–º–∞–Ω–∏–π!\n\n–°–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏ –∏ –¥–æ –∑–∞–≤—Ç—Ä–∞!"
        else:
            message = f"üåô –î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä, {first_name}!\n\n‚ö†Ô∏è –ù–µ –∑–∞–±—É–¥—å –ø—Ä–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É!\nüìä –ü—Ä–æ–≥—Ä–µ—Å—Å: {today_count}/{daily_goal}\nüéØ –û—Å—Ç–∞–ª–æ—Å—å: {remaining}\n\n–°–¥–µ–ª–∞–π —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ä—ã–≤–æ–∫ –∏ –≤—ã–ø–æ–ª–Ω–∏ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –æ—Ç–∂–∏–º–∞–Ω–∏—è!"
        
        await bot.send_message(chat_id, message)
        logging.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤–µ—á–µ—Ä–Ω–µ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}")
        
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–µ—á–µ—Ä–Ω–µ–≥–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}: {e}")


async def send_level_up_notification(bot, chat_id, first_name, new_level, new_goal):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–æ–≤—ã—à–µ–Ω–∏–∏ —É—Ä–æ–≤–Ω—è."""
    try:
        level_names = {
            1: "–ù–æ–≤–∏—á–æ–∫",
            2: "–£—á–µ–Ω–∏–∫", 
            3: "–ü–æ–¥–º–∞—Å—Ç–µ—Ä—å–µ",
            4: "–ú–∞—Å—Ç–µ—Ä",
            5: "–≠–∫—Å–ø–µ—Ä—Ç",
            6: "–õ–µ–≥–µ–Ω–¥–∞"
        }
        
        message = f"üéä –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, {first_name}!\n\n"
        message += f"üèÜ –¢—ã –¥–æ—Å—Ç–∏–≥ –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è!\n"
        message += f"üìà –£—Ä–æ–≤–µ–Ω—å: {new_level} ({level_names.get(new_level, '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π')})\n"
        message += f"üéØ –ù–æ–≤–∞—è —Ü–µ–ª—å: {new_goal} –æ—Ç–∂–∏–º–∞–Ω–∏–π –≤ –¥–µ–Ω—å\n\n"
        message += f"–ü—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ! –¢—ã —Å—Ç–∞–Ω–æ–≤–∏—à—å—Å—è —Å–∏–ª—å–Ω–µ–µ!"
        
        await bot.send_message(chat_id, message)
        logging.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–≤—ã—à–µ–Ω–∏–∏ —É—Ä–æ–≤–Ω—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}")
        
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–æ–≤—ã—à–µ–Ω–∏–∏ —É—Ä–æ–≤–Ω—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}: {e}")


async def send_weekly_progress_report(bot, chat_id, first_name):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ."""
    try:
        from src.infrastructure.database import DatabaseAdapter
        
        db = DatabaseAdapter()
        user = db.get_user(chat_id)
        
        if not user:
            return
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        stats = db.get_user_stats(chat_id)
        
        if not stats:
            return
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
        message = f"üìä –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç, {first_name}!\n\n"
        message += f"üìà –£—Ä–æ–≤–µ–Ω—å: {user.level}\n"
        message += f"üéØ –î–Ω–µ–≤–Ω–∞—è —Ü–µ–ª—å: {db.get_daily_goal(user.level)} –æ—Ç–∂–∏–º–∞–Ω–∏–π\n"
        message += f"üìÖ –î–Ω–µ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏: {stats.days_count}\n"
        message += f"üí™ –í—Å–µ–≥–æ –æ—Ç–∂–∏–º–∞–Ω–∏–π: {stats.total_pushups}\n\n"
        
        if stats.days_count >= 7:
            message += "üéâ –û—Ç–ª–∏—á–Ω–∞—è –Ω–µ–¥–µ–ª—è! –¢—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞–ª—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å!"
        elif stats.days_count >= 5:
            message += "üëç –•–æ—Ä–æ—à–∞—è –Ω–µ–¥–µ–ª—è! –ü—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ!"
        else:
            message += "üí™ –ù–∞ —Å–ª–µ–¥—É—é—â–µ–π –Ω–µ–¥–µ–ª–µ –ø–æ—Å—Ç–∞—Ä–∞–π—Å—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è —á–∞—â–µ!"
        
        await bot.send_message(chat_id, message)
        logging.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}")
        
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}: {e}") 